@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@model IEnumerable<EShift.Models.Job>

@{
    ViewData["Title"] = "Jobs";
    var currentFilterStatus = ViewData["CurrentFilterStatus"] as string;
    var allStatuses = new List<string> { "InProgress", "Completed", "Cancelled" };

    int currentPage = (int)ViewData["CurrentPage"];
    int totalPages = (int)ViewData["TotalPages"];
    bool hasPreviousPage = (bool)ViewData["HasPreviousPage"];
    bool hasNextPage = (bool)ViewData["HasNextPage"];
}

<style>
    .page-container {
        background-color: #f9fafb;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 0 20px rgb(0 0 0 / 0.05);
        max-width: 1000px;
        margin: 0 auto;
    }

    h1 {
        color: #0d3b66;
        font-weight: 700;
        margin-bottom: 1.5rem;
    }

    /* Filter form */
    form.d-flex {
        gap: 10px;
        margin-bottom: 1.5rem;
    }

    select.form-select {
        max-width: 180px;
        border-radius: 8px;
        border: 1.5px solid #0d3b66;
    }

    button, .btn {
        border-radius: 8px;
        font-weight: 600;
        padding: 0.4rem 1.2rem;
        transition: background-color 0.3s ease;
    }

    button.btn-primary:hover,
    a.btn-primary:hover {
        background-color: #07456f;
    }

    button.btn-secondary:hover,
    a.btn-secondary:hover {
        background-color: #6c757d;
        color: #fff;
    }

    /* Table styles */
    .table {
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 0 15px rgba(13, 59, 102, 0.1);
    }

    .table thead {
        background-color: #0d3b66;
        color: white;
        font-weight: 600;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #e6f0fa;
    }

    .table-hover tbody tr:hover {
        background-color: #c1d3f2;
    }

    /* Status badges */
    .badge-status {
        padding: 0.4em 0.75em;
        border-radius: 20px;
        font-weight: 600;
        color: white;
        text-transform: capitalize;
        font-size: 0.9rem;
    }

    .badge-status.InProgress {
        background-color: #f4a261; /* orange */
    }

    .badge-status.Completed {
        background-color: #2a9d8f; /* teal green */
    }

    .badge-status.Cancelled {
        background-color: #e76f51; /* red-orange */
    }

    /* Action buttons */
    .btn-sm {
        padding: 0.3rem 0.7rem;
        font-size: 0.85rem;
    }

    .btn-primary {
        background-color: #0d3b66;
        border-color: #0d3b66;
    }

    .btn-primary:hover {
        background-color: #07456f;
        border-color: #07456f;
    }

    .btn-info {
        background-color: #3a86ff;
        border-color: #3a86ff;
        color: white;
    }

    .btn-info:hover {
        background-color: #265dcc;
        border-color: #265dcc;
    }

    .btn-danger {
        background-color: #e63946;
        border-color: #e63946;
        color: white;
    }

    .btn-danger:hover {
        background-color: #b22234;
        border-color: #b22234;
    }

    /* Pagination */
    .pagination .page-item.active .page-link {
        background-color: #0d3b66;
        border-color: #0d3b66;
    }
</style>

<div class="page-container">
    <h1 class="text-center">Jobs List</h1>

    <p class="text-center mb-4">
        <a asp-action="Create" class="btn btn-success rounded-2 shadow-sm px-4">
            Create New Job
        </a>
    </p>

    <form asp-action="Index" method="get" class="d-flex justify-content-center align-items-center">
        <label for="statusFilter" class="form-label me-2 mb-0 fw-semibold">Filter by Status:</label>
        <select name="status" id="statusFilter" class="form-select me-2" onchange="this.form.submit()">
            <option value="">All Statuses</option>
            @foreach (var status in allStatuses)
            {
                <option value="@status" selected="@(status == currentFilterStatus)">
                    @status
                </option>
            }
        </select>
        <button type="submit" class="btn btn-primary me-2">Apply Filter</button>
        <a asp-action="Index" class="btn btn-secondary">Reset Filter</a>
    </form>

    <div class="table-responsive rounded-3 shadow-sm border mt-4">
        <table class="table table-striped table-hover mb-0 text-center align-middle">
            <thead>
                <tr>
                    <th scope="col" class="py-3 px-3">@Html.DisplayNameFor(model => model.First().JobId)</th>
                    <th scope="col" class="py-3 px-3">@Html.DisplayNameFor(model => model.First().Customer.Name)</th>
                    <th scope="col" class="py-3 px-3">@Html.DisplayNameFor(model => model.First().StartLocation)</th>
                    <th scope="col" class="py-3 px-3">@Html.DisplayNameFor(model => model.First().Destination)</th>
                    <th scope="col" class="py-3 px-3">@Html.DisplayNameFor(model => model.First().JobDate)</th>
                    <th scope="col" class="py-3 px-3">@Html.DisplayNameFor(model => model.First().Status)</th>
                    <th scope="col" class="py-3 px-3">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="py-3 px-3">@Html.DisplayFor(modelItem => item.JobId)</td>
                        <td class="py-3 px-3">@Html.DisplayFor(modelItem => item.Customer.Name)</td>
                        <td class="py-3 px-3">@Html.DisplayFor(modelItem => item.StartLocation)</td>
                        <td class="py-3 px-3">@Html.DisplayFor(modelItem => item.Destination)</td>
                        <td class="py-3 px-3">@item.JobDate.ToString("yyyy-MM-dd")</td>
                        <td class="py-3 px-3">
                            <span class="badge-status @item.Status">@item.Status</span>
                        </td>
                        <td class="py-3 px-3">
                            <a asp-action="Edit" asp-route-id="@item.JobId" class="btn btn-sm btn-primary me-1">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.JobId" class="btn btn-sm btn-info me-1">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.JobId" class="btn btn-sm btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(hasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(currentPage - 1)"
                   asp-route-status="@currentFilterStatus" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-status="@currentFilterStatus">@i</a>
                </li>
            }

            <li class="page-item @(hasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(currentPage + 1)"
                   asp-route-status="@currentFilterStatus" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
